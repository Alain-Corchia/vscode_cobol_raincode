{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "hlasm",
  "fileTypes": [
    "hlasm",
    "asm",
    "mac",
    "mlc"
  ],
  "patterns": [
    {
      "include": "#line"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "match": "^(\\*.{,71})|(^\\.\\*.{,70})",
          "name": "comment"
        }
      ]
    },
    "double.strings": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin"
        }
      },
      "end": "(\"|$)",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end"
        }
      },
      "name": "string.quoted.double"
    },
    "directive.single.strings": {
      "match": "(?i:title\\s+)('.*')",
      "captures": {
        "0": {
          "name": "keyword.other"
        },
        "1": {
          "name": "string.directive"
        }
      }
    },
    "char.strings": {
      "match": "(([cC])|([cC][uU]))'.*'",
      "name": "string.character"
    },
    "char.ln.strings": {
      "match": "(([cC][lL])|([cC][uU][lL]))([0-9]*)'.*'",
      "name": "string.character"
    },
    "hex.strings": {
      "match": "(([xX]|[fF]))'\\h*'",
      "name": "constant.numeric.integer.hexadecimal"
    },
    "hex.ln.strings": {
      "match": "(([xX]|[xX][lL]))([0-9]*)'\\h*'",
      "name": "constant.numeric.integer.hexadecimal"
    },
    "hex.strings.invalid": {
      "match": "([xX])'.*'",
      "name": "invalid.illegal.hexadecimal"
    },
    "single.strings": {
      "match": "\\s('.*')",
      "name": "string"
    },
    "label": {
      "patterns": [
        {
          "match": "(^[0-9a-z@A-Z$#_]+)",
          "name": "entity.name.function"
        }
      ]
    },
    "general_instructions": {
      "patterns": [
        {
          "match": "(^|\\b)(?i:a|ah|al|alr|ap|ar|bal|balr|bas|basm|bassm|bc|bcr|bctr|bsm|bxh|bxle|c|cds|ch|cl|clc|clcl|cli|clm|clr|cp|cr|cs|cvb|cvd|d|dp|dr|ed|edmk|ex|ic|icm|ipm|l|la|lcr|lh|lm|lnr|lpr|lr|ltr|m|mh|mp|mr|mvc|mvcin|mvcl|mvi|mvn|mvo|mvz|n|nc|ni|nr|o|oc|oi|or|pack|s|sh|sl|sla|slda|sldl|sll|slr|sp|sr|sra|srda|srdl|srl|srp|st|stb|stc|spm|stcm|sth|stm|svc|tm|tr|trt|unpk|x|xc|xi|xr|zap)\\b",
          "name": "keyword"
        }
      ]
    },
    "branch_instructions": {
      "patterns": [
        {
          "match": "(^|\\b)(?i:b|bct|be|ber|bh|bhr|bl|blr|bm|bmr|bne|bner|bnh|bnhr|bnl|bnlr|bnm|bnmr|bno|bnor|bnp|bnpr|bnz|bnzr|bo|bor|bor|bp|bpr|br|bz|bz|bzr|nop|nopr)\\b",
          "name": "keyword.control"
        }
      ]
    },
    "directives": {
      "patterns": [
        {
          "match": "\\b(?i:amode|com|copy|csect|dc|dsect|ds|drop|eject|end|entry|equ|ltorg|macro|mend|mexit|mnote|org|print|rmode|space|start|title|using)\\b",
          "name": "keyword.other.directives"
        }
      ]
    },
    "parameters": {
      "patterns": [
        {
          "match": "\\b(?i:blksize|dcb|ddname|dsorg|eodad|gen|id|lrecl|lv|macrf|nogen|pdata|recfm|record|ru|storage)\\b",
          "name": "variable.parameter"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "match": "\\b(?i:and:eq:ge:gt:le:lt:ne:not:or)\\b",
          "name": "keyword.operator"
        }
      ]
    },
    "macros": {
      "patterns": [
        {
          "match": "(^|\\b|\\s+)(?i:actr|ago|aif|anop|chau|close|dcb|gbla|gblb|gblc|get|lcla|lclb|lclc|open|ppio|put|read|seta|setb|setc|snap|write|wto|wtor|wtorpc)\\b",
          "name": "entity.name.function"
        }
      ]
    },
    "todo": {
      "patterns": [
        {
          "match": "(^\\*)(:(?i:todo):)(.{,63})",
          "captures": {
            "1": {
              "name": "comment.line.todo"
            },
            "2": {
              "name": "token.warning"
            },
            "3": {
              "name": "comment.line"
            }
          }
        }
      ]
    },
    "instructions": {
      "patterns": [
        {
          "include": "#general_instructions"
        },
        {
          "include": "#branch_instructions"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "include": "#char.strings"
        },
        {
          "include": "#char.ln.strings"
        },
        {
          "include": "#hex.strings"
        },
        {
          "include": "#hex.ln.strings"
        },
        {
          "include": "#hex.strings.invalid"
        },
        {
          "include": "#double.strings"
        },
        {
          "include": "#single.strings"
        }
      ]
    },
    "label_directive_comment": {
      "patterns": [
        {
          "include": "#label"
        },
        {
          "include": "#directives"
        },
        {
          "include": "#constants"
        }
      ]
    },
    "line": {
      "patterns": [
        {
          "match": "^(.{,72})([0-9]*$)",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#comment"
                },
                {
                  "include": "#label_directive_comment"
                },
                {
                  "include": "#instructions"
                },
                {
                  "include": "#directive.single.strings"
                },
                {
                  "include": "#operators"
                },
                {
                  "include": "#macros"
                },
                {
                  "include": "#parameters"
                }
              ]
            },
            "2": {
              "name": "comment.line"
            }
          }
        }
      ]
    }
  },
  "scopeName": "source.hlasm"
}