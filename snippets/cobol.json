{
	"add": {
		"prefix": "add",
		"body": [
			"add ${1:a} to ${2:b} giving ${3:c}"
		],
		"description": "Add a to b giving c",
		"scope": "cobol,acucobol,opencobol"
	},
	"ADD": {
		"prefix": "ADD",
		"body": [
			"ADD ${1:a} TO ${2:b} GIVING ${3:c}"
		],
		"description": "Add a to b giving c",
		"scope": "cobol,acucobol,opencobol"
	},
	"accept": {
		"prefix": "accept",
		"body": [
			"accept ${1:variable}",
			"$0"
		],
		"scope": "cobol,acucobol,opencobol"
	},
	"ACCEPT": {
		"prefix": "ACCEPT",
		"body": [
			"ACCEPT ${1:variable}",
			"$0"
		],
		"scope": "cobol,acucobol,opencobol"
	},
	"accept from": {
		"prefix": "accept",
		"body": [
			"accept ${1:variable} ${2|from date,from day,from day-of-week,time|}",
			"$0"
		],
		"description": "accept from date/day/week/time",
		"scope": "cobol,acucobol,opencobol"
	},
	"ACCEPT FROM": {
		"prefix": "ACCEPT",
		"body": [
			"ACCEPT ${1:variable} ${2|FROM DATE,FROM DAY,FROM DAY-OF-WEEK,TIME|}",
			"$0"
		],
		"description": "ACCEPT FROM DATE/DAY/WEEK/TIME",
		"scope": "cobol,acucobol,opencobol"
	},
	"class-id": {
		"prefix": "class-id",
		"body": [
			"       class-id $1 ${3|public,private|}.",
			"",
			"       method-id new public.",
			"       procedure division.",
			"           $0",
			"           exit method.",
			"       end method.",
			"",
			"       end class."
		],
		"description": "class with ctor",
		"scope": "cobol"
	},
	"copy": {
		"prefix": "copy",
		"body": [
			"copy \"${1:subprog.cpy}\"",
			"    replacing ==${2:()}== by ==${3:lnk-}==."
		],
		"description": "Copy replacing",
		"scope": "cobol,acucobol,opencobol"
	},
	"COPY": {
		"prefix": "COPY",
		"body": [
			"COPY \"${1:SUBPROG.CPY}\"",
			"    REPLACING ==${2:()}== BY ==${3:lnk-}==."
		],
		"description": "COPY REPLACING",
		"scope": "cobol,acucobol,opencobol"
	},
	"divide": {
		"prefix": "divide",
		"body": [
			"divide ${1:a} by ${2:b} giving ${3:c} ${4:remainder ${5:d}}"
		],
		"description": "divide a by b giving [remainder}",
		"scope": "cobol,acucobol,opencobol"
	},
	"DIVIDE": {
		"prefix": "DIVIDE",
		"body": [
			"DIVIDE ${1:a} BY ${2:b} GIVING ${3:c} ${4:REMAINDER ${5:d}}"
		],
		"description": "DIVIDE a BY b GIVING [REMAINDER}",
		"scope": "cobol,acucobol,opencobol"
	},
	"entry": {
		"prefix": "entry",
		"body": [
			"entry \"$1\".",
			"    $0\t",
			"    goback.",
			""
		],
		"description": "entry statement",
		"scope": "cobol,acucobol,opencobol"
	},
	"ENTRY": {
		"prefix": "ENTRY",
		"body": [
			"ENTRY \"$1\".",
			"    $0\t",
			"    GOBACK.",
			""
		],
		"description": "ENTRY statement",
		"scope": "cobol,acucobol,opencobol"
	},
	"enum-id": {
		"prefix": "enum-id",
		"body": [
			"*>> <summary>enum-id $1</summary>",
			"enum-id. $1 as \"Status\".",
			"    78 ${2:Item}  value ${3:1}.",
			"end enum $1.",
			""
		],
		"description": "enum-id",
		"scope": "cobol"
	},
	"evaluate": {
		"prefix": "evaluate",
		"body": [
			"evaluate $1",
			"    when $2",
			"       $0",
			"    when other",
			"       continue",
			"end-evaluate",
			""
		],
		"description": "evaluate",
		"scope": "cobol,acucobol,opencobol"
	},
	"EVALUATE": {
		"prefix": "EVALUATE",
		"body": [
			"EVALUATE $1",
			"    WHEN $2",
			"       $0",
			"    WHEN OTHER",
			"       CONTINUE",
			"END-EVALUATE",
			""
		],
		"description": "EVALUATE",
		"scope": "cobol,acucobol,opencobol"
	},
	"exec-sql": {
		"prefix": "exec",
		"body": [
			"exec sql include sqlca end-exec."
		],
		"description": "exec sql include",
		"scope": "cobol,acucobol"
	},
	"exec-sql-begin": {
		"prefix": "exec",
		"body": [
			"exec sql begin declare section end-exec.",
			"$0",
			"exec sql end declare section end-exec."
		],
		"description": "exec sql declare",
		"scope": "cobol"
	},
	"if": {
		"prefix": "if",
		"body": [
			"if ${1:condition}",
			"   $0",
			"end-if"
		],
		"scope": "cobol"
	},
	"IF": {
		"prefix": "IF",
		"body": [
			"IF ${1:CONDITION}",
			"   $0",
			"END-IF"
		],
		"scope": "cobol"
	},
	"if else": {
		"prefix": "if",
		"body": [
			"if ${1:condition}",
			"   $0",
			"else",
			"   ",
			"end-if"
		],
		"scope": "cobol"
	},
	"IF ELSE": {
		"prefix": "IF",
		"body": [
			"IF ${1:CONDITION}",
			"   $0",
			"ELSE",
			"   ",
			"END-IF"
		],
		"scope": "cobol"
	},
	"inspect converting": {
		"prefix": "inspect",
		"body": [
			"inspect $1 converting '${2:ABCDEFGHIJKLMNOPQRSTUVWXYZ}' to '${3:abcdefghijklmnopqrstuvwxyz}'"
		],
		"description": "inspect converting",
		"scope": "cobol,acucobol,opencobol"
	},
	"INSPECT CONVERTING": {
		"prefix": "INSPECT",
		"body": [
			"INSPECT $1 CONVERTING '${2:ABCDEFGHIJKLMNOPQRSTUVWXYZ}' to '${3:abcdefghijklmnopqrstuvwxyz}'"
		],
		"description": "INSPECT CONVERTING",
		"scope": "cobol,acucobol,opencobol"
	},	
	"inspect replacing": {
		"prefix": "inspect",
		"body": [
			"inspect $1 replacing all ${2|spaces,zero|} by '${3}'"
		],
		"description": "inspect replacing",
		"scope": "cobol,acucobol,opencobol"
	},
	"INSPECT REPLACING": {
		"prefix": "INSPECT",
		"body": [
			"INSPECT $1 REPLACING ALL ${2|SPACES,ZERO|} BY '${3}'"
		],
		"description": "INSPECT REPLACING",
		"scope": "cobol,acucobol,opencobol"
	},	
	"inspect tallying": {
		"prefix": "inspect",
		"body": [
			"move 0 to ${2:counter}",
			"inspect ${1:source} tallying ${2:counter} for ${3|all spaces,all $4,characters|}"
		],
		"description": "Inspect a tallying counter for ...",
		"scope": "cobol,acucobol,opencobol"
	},
	"INSPECT TALLYING": {
		"prefix": "INSPECT",
		"body": [
			"MOVE 0 to ${2:COUNTER}",
			"INSPECT ${1:SOURCE} TALLYING ${2:COUNTER} FOR ${3|ALL SPACES,ALL $4,CHARACTERS|}"
		],
		"description": "Inspect a tallying counter for ...",
		"scope": "cobol,acucobol,opencobol"
	},
	"main method-id": {
		"prefix": "main",
		"body": [
			"*>> <summary>method main</summary>",
			"method-id main public static.",
			"procedure division using",
			"           by value args as string occurs any.",
			"    $0",
			"end method.",
			""
		],
		"description": "method-id (main)",
		"scope": "cobol"
	},
	"method-id": {
		"prefix": "method-id",
		"body": [
			"*>> <summary>method $1</summary>",
			"method-id $1.",
			"procedure division.",
			"    $0",
			"end method.",
			""
		],
		"description": "method-id",
		"scope": "cobol"
	},
	"MFUnit Test": {
		"prefix": "mfu,program-id",
		"body": [
			"       program-id. MFUT_${1:${TM_FILENAME/(.*)\\..+$/$1/}}.",
			"       working-storage section.",
			"       copy \"mfunit.cpy\".",
			"",
			"       01 test-fail-count     binary-long value 0.",
			"       *> Testcase $1",
			"       procedure division.",
			"           $0",
			"           if 1 not equal 1",
			"               display \"Odd... 1 not equal 1?\"",
			"               add 1 to test-fail-count",
			"           end-if",
			"",
			"           if test-fail-count not equal 0",
			"               call \"MFU_ASSERT_FAIL_Z\" using",
			"                    by reference z\"$1 has failed\"",
			"               end-call",
			"           end-if",
			"",
			"           goback returning test-fail-count.",
			"",
			"       *> Startup for testcase $1",
			"       entry \"MFUS_$1\".",
			"           *> Open any files",
			"           goback.",
			"",
			"       *> Teardown for testcase $1",
			"       entry \"MFUE_$1\".",
			"           *> Close any files/delete any temp files",
			"           goback.",
			"",
			"       *> Metadata for testcase $1",
			"       entry \"MFUM_$1\".",
			"           goback.",
			"       end program."
		],
		"description": "MFUNIT skelton program",
		"scope": "cobol"
	},
	"multiply": {
		"prefix": "multiply",
		"body": [
			"multiply ${1:a} by ${2:b} giving ${3:c}"
		],
		"description": "Multiply a by y giving z",
		"scope": "cobol,acucobol,opencobol"
	},
	"MULTIPLY": {
		"prefix": "MULTIPLY",
		"body": [
			"MULTIPLY ${1:a} BY ${2:b} GIVING ${3:c}"
		],
		"description": "MULTIPLY a BY y GIVING z",
		"scope": "cobol,acucobol,opencobol"
	},	
	"perform": {
		"prefix": "perform",
		"body": [
			"perform ${1:paragraph-name} ${2:value-1} times"
		],
		"description": "perform paragraph x times",
		"scope": "cobol,acucobol,opencobol"
	},
	"PERFORM": {
		"prefix": "PERFORM",
		"body": [
			"PERFORM ${1:paragraph-name} ${2:value-1} TIMES"
		],
		"description": "PERFORM paragraph x TIMES",
		"scope": "cobol,acucobol,opencobol"
	},	
	"perform varying": {
		"prefix": "perform",
		"body": [
			"perform ${1:paragraph-name} varying ${2:field-1}",
			" from ${3:value-1} by ${4:value-2}",
			" until ${5:condition}",
			"$0"
		],
		"description": "inline perform varying",
		"scope": "cobol,acucobol,opencobol"
	},
	"PERFORM VARYING": {
		"prefix": "PERFORM",
		"body": [
			"PERFORM ${1:paragraph-name} VARYING ${2:field-1}",
			" FROM ${3:value-1} BY ${4:value-2}",
			" UNTIL ${5:condition}",
			"$0"
		],
		"description": "INLINE PERFORM VARYING",
		"scope": "cobol,acucobol,opencobol"
	},	
	"IDENTIFICATION (CICS)": {
		"prefix": "IDENTIFICATION",
		"body": [
			"        IDENTIFICATION DIVISION. ",
			"        PROGRAM-ID. $1.",
			"        DATA DIVISION.",
			"        WORKING-STORAGE SECTION. ",
			"        01 OUT-MSG.",
			"         02 FILLER PIC X(6) VALUE \"Hello \". ",
			"         02 MSG    PIC X(20).",
			"        01 INP-MSG PIC X(20) VALUE \"What is your name? \".     ",
			"        PROCEDURE DIVISION.",
			"        PARA1.",
			"            EXEC CICS",
			"                 SEND FROM(INP-MSG)",
			"                 ERASE",
			"            END-EXEC",
			"",
			"            EXEC CICS",
			"                 RECEIVE INTO (MSG)",
			"            END-EXEC",
			"",
			"       *",
			"            EXEC CICS",
			"                 SEND FROM (OUT-MSG)",
			"                 ERASE",
			"            END-EXEC",
			"",
			"            EXEC CICS",
			"                 RETURN",
			"            END-EXEC.",
			"",
			"       *",
			"        END PROGRAM $1.",
			""
		],
		"description": "Template for program (CICS)",
		"scope": "cobol"
	},
	"Minimum Line Sequential": {
		"prefix": "identification",
		"body": [
			"       identification division.",
			"       program-id. ${1:${TM_FILENAME/(.*)\\..+$/$1/}}.",
			"",
			"       environment division.",
			"       input-output section.",
			"        file-control.",
			"        select ${2:cust} assign to '${4:$2}.txt'",
			"        organization is line sequential.            ",
			"",
			"       data division.",
			"       file section.",
			"       fd $2.",
			"       01 ${3:$2-file}.",
			"        03 ${5:customer-id}    pic 9(5).",
			"        03 ${6:customer-info}  pic x(65).",
			"",
			"       working-storage section.",
			"       01 ws-eof       pic a. ",
			"",
			"       procedure division.",
			"          open input $2.",
			"             perform until ws-eof='Y'",
			"                read $2",
			"                   at end",
			"                      move 'Y' to ws-eof",
			"                   not at end",
			"                      display ${5} \" => \" ${6}",
			"                end-read",
			"             end-perform",
			"          close $2.",
			"          $0",
			"          goback.",
			"",
			"       end program $1.",
			""
		],
		"description": "Minimum template File/Seq",
		"scope": "cobol"
	},
	"Minimum mainframe program [uppercase]": {
		"prefix": "IDENTIFICATION",
		"body": [
			"       IDENTIFICATION DIVISION.",
			"       PROGRAM-ID. ${1:${1:${TM_FILENAME/(.*)\\..+$/$1/}}}.",
			"       AUTHOR. $2.",
			"       INSTALLATION. ${3:where}.",
			"       DATE-WRITTEN. ${4:$CURRENT_DATE/$CURRENT_MONTH/$CURRENT_YEAR}.",
			"       DATE-COMPILED.${5:$4}.",
			"       SECURITY.",
			"       ENVIRONMENT DIVISION.",
			"       CONFIGURATION SECTION.",
			"       SOURCE-COMPUTER. ${6:pc}.",
			"       OBJECT-COMPUTER. ${7:${6}}.",
			"       SPECIAL-NAMES.",
			"       INPUT-OUTPUT SECTION.",
			"       FILE-CONTROL.",
			"       DATA DIVISION.",
			"        FILE SECTION.",
			"        WORKING-STORAGE SECTION.",
			"        LINKAGE SECTION.",
			"       PROCEDURE DIVISION.",
			"        DECLARATIVES.",
			"        END DECLARATIVES.",
			"        main-processing SECTION.",
			"         mainline-paragraph.",
			"             $0",
			"             STOP RUN.",
			"       END PROGRAM $1."
		],
		"description": "Template for mainframe",
		"scope": "cobol"
	},
	"Skelton program": {
		"prefix": "program-id",
		"body": [
			"       program-id. ${1:${TM_FILENAME/(.*)\\..+$/$1/}}.",
			"",
			"       environment division.",
			"       configuration section.",
			"",
			"       data division.",
			"       working-storage section.",
			"",
			"       procedure division.",
			"           $0",
			"           goback.",
			"",
			"       end program $1.",
			""
		],
		"description": "Small template for program",
		"scope": "cobol"
	},
	"Minimum program": {
		"prefix": "program-id",
		"body": [
			"       program-id. ${1:${TM_FILENAME/(.*)\\..+$/$1/}}.",
			"       procedure division.",
			"           $0",
			"           goback.",
			"",
			"       end program $1.",
			""
		],
		"description": "Minimum template",
		"scope": "cobol"
	},
	"property": {
		"prefix": "property",
		"body": [
			"01 ${2:_prop} ${3:binary-long} private.",
			"method-id. get property #${1:Prop}.",
			"procedure division returning ret as ${3:binary-long}.",
			"    set ret to ${2:_prop}",
			"end method.",
			"method-id. set property #${1:Prop}.",
			"procedure division using by value val as ${3:binary-long}.",
			"    set ${2:_prop} to 0",
			"end method.",
			""
		],
		"description": "set/get property",
		"scope": "cobol"
	},
	"subtract": {
		"prefix": "subtract",
		"body": [
			"subtract ${1:a} from ${2:b} giving ${3:c}"
		],
		"description": "subtract a from b giving c",
		"scope": "cobol,acucobol,opencobol"
	},
	"SUBTRACT": {
		"prefix": "SUBTRACT",
		"body": [
			"SUBTRACT ${1:a} FROM ${2:b} GIVING ${3:c}"
		],
		"description": "SUBTRACT a FROM b GIVING c",
		"scope": "cobol,acucobol,opencobol"
	},	
	"try": {
		"prefix": "try",
		"body": [
			"try",
			"$2",
			"catch ${1:Exception}",
			"$0",
			"end-try"
		],
		"description": "try catch",
		"scope": "cobol"
	},
	"valuetype": {
		"prefix": "valuetype-id",
		"body": [
			"valuetype-id $1 ${2:public}.",
			"01 item string ${2:public}.",
			"",
			"method-id new ${2:public}.",
			"procedure division.",
			"   $0",
			"end method.",
			"",
			"end valuetype."
		],
		"description": "valuetype",
		"scope": "cobol"
	},
	"display": {
		"prefix": "display",
		"body": [
			"display \"$0\""
		],
		"description": "display literal",
		"scope": "cobol"
	},
	"DISPLAY": {
		"prefix": "DISPLAY",
		"body": [
			"DISPLAY \"$0\""
		],
		"description": "DISPLAY literal",
		"scope": "cobol"
	},	
	"select-to-section": {
		"prefix": "perform",
		"body": [
			"$1 section.",
			"   $TM_SELECTED_TEXT",
			"$1-end section.",
			"   exit section."
		],
		"description": "select-tosection",
		"scope": "cobol"
	},
	"string": {
		"prefix": "string",
		"body": [
			"string ${1:item1} delimited by size",
			"       ${2:item2} delimited by size",
			"       into ${3:result}",
			"end-string",
			"$0"
		],
		"description": "string delimited by size",
		"scope": "cobol,acucobol,opencobol"
	},
	"STRING": {
		"prefix": "STRING",
		"body": [
			"STRING ${1:item1} DELIMITED BY SIZE",
			"       ${2:item2} DELIMITED BY SIZE",
			"       INTO ${3:result}",
			"END-STRING",
			"$0"
		],
		"description": "string delimited by size",
		"scope": "cobol,acucobol,opencobol"
	},
	"function": {
		"prefix": "function",
		"body": [
			"function ${1|upper-case,lower-case,length,reverse,numval,numval-c|}($0)"
		],
		"description": "functions",
		"scope": "cobol,acucobol,opencobol"
	},
	"FUNCTION": {
		"prefix": "FUNCTION",
		"body": [
			"FUNCTION ${1|UPPER-CASE,LOWER-CASE,LENGTH,REVERSE,NUMVAL,NUMVAL-C|}($0)"
		],
		"description": "FUNCTIONS",
		"scope": "cobol,acucobol,opencobol"
	},
	"call": {
		"prefix": "call",
		"body": [
			"call \"$1\" using",
			"    by ${2|value,reference,content|} ${3:identifer}",
			"    returning ${4:return-code}",
			"end-call",
			"$0"
		],
		"description": "CALL literal"
	},
	"CALL": {
		"prefix": "CALL",
		"body": [
			"CALL \"$1\" USING",
			"    BY ${2|VALUE,REFERENCE,CONTENT|} ${3:IDENTIFER}",
			"    RETURNING ${4:RETURN-CODE}",
			"eND-CALL",
			"$0"
		],
		"description": "CALL literal"
	},
	"cancel": {
		"prefix": "cancel",
		"body": [
			"cancel \"$1\"",
			"$0"
		],
		"description": "CANCEL literal"
	},
	"CANCEL": {
		"prefix": "CANCEL",
		"body": [
			"CANCEL \"$1\"",
			"$0"
		],
		"description": "CANCEL literal"
	},
	"exit program": {
		"prefix": "exit",
		"body": [
			"exit program returning ${1:item}"
		],
		"description": "EXIT PROGRAM"
	},
	"EXIT PROGRAM": {
		"prefix": "EXIT",
		"body": [
			"EXIT PROGRAM RETURNING ${1:item}"
		],
		"description": "EXIT PROGRAM"
	},
	"dialect": {
		"prefix": "$set",
		"body": [
			"\\$set dialect\"${2|ans85,bs2000,bs2000-offload,cob370,cob371,cob372,entcobol,mf,mvs,os390,osvs,vsc21,vsc22,vsc23,vsc24|}\"",
			"$0"
		]
	},
	"sourceformat": {
		"prefix": "$set",
		"body": [
			"\\$set sourceformat\"${2|free,variable,fixed|}\"",
			"$0"
		]
	},
	"IDENTIFICATION DIVISION" :
	{
		"prefix" : "IDENTIFICATION DIVISION",
		"body" : [
			"IDENTIFICATION DIVISION.",
			"$0"
		]
	},
	"identification division" :
	{
		"prefix" : "identification division",
		"body" : [
			"identification division.",
			"$0"
		]
	},
	"environment division" :
	{
		"prefix" : "environment division",
		"body" : [
			"environment division.",
			"$0"
		]
	},
	"ENVIRONMENT DIVISION" :
	{
		"prefix" : "ENVIRONMENT DIVISION",
		"body" : [
			"ENVIRONMENT DIVISION.",
			"$0"
		]
	},
	"DATA DIVISION" :
	{
		"prefix" : "DATA DIVISION",
		"body" : [
			"DATA DIVISION.",
			"$0"
		]
	},
	"data division" :
	{
		"prefix" : "data division",
		"body" : [
			"data division.",
			"$0"
		]
	},
	"WORKING-STORAGE SECTION" :
	{
		"prefix" : "WORKING-STORAGE",
		"body" : [
			"WORKING-STORAGE SECTION.",
			"$0"
		]
	},

	"working-storage section" :
	{
		"prefix" : "working-storage",
		"body" : [
			"working-storage section.",
			"$0"
		]
	},
	
	"local-storage section" :
	{
		"prefix" : "local-storage",
		"body" : [
			"local-storage section.",
			"$0"
		]
	},	
	"LINKAGE SECTION " :
	{
		"prefix" : "LINKAGE SECTION",
		"body" : [
			"LINKAGE SECTION.",
			"$0"
		]
	},
	"linkage section." :
	{
		"prefix" : "linkage section",
		"body" : [
			"linkage section.",
			"$0"
		]
	},
	"PROCEDURE DIVISION" :
	{
		"prefix" : "PROCEDURE DIVISION",
		"body" : [
			"PROCEDURE DIVISION.",
			"$0"
		]
	},
	"procedure division" :
	{
		"prefix" : "procedure division",
		"body" : [
			"procedure division.",
			"$0"
		]
	},
	"PROGRAM-ID" :
	{
		"prefix" : "PROGRAM ID.",
		"body" : [
			"PROGRAM-ID. ${1:${TM_FILENAME/(.*)\\..+$/${1:/upcase}/}}.",
			"$0"
		]
	},
	"program-id" :
	{
		"prefix" : "program id. ",
		"body" : [
			"program-id. ${1:${TM_FILENAME/(.*)\\..+$/$1/}}.",
			"$0"
		]
	}
}